#!/bin/bash
#
# This script was automatically generated.
# Task ID: {{{ taskId }}}
#

export MESOS_TASK_ID={{{bashEscaped taskId}}}  # I can't believe Mesos doesn't expose this.

# load system-wide profile.d
if [[ -d /etc/profile.d ]]; then
  echo "Sourcing files from /etc/profile.d"
  for i in /etc/profile.d/*.sh; do
    source $i >/dev/null 2>&1
    echo "    Sourced $i"
  done
else
  echo "No /etc/profile.d to source"
fi

# load env vars
if [[ -f deploy.env ]]; then
  echo "Sourcing deploy-specific environment variables"
  source deploy.env
else
  echo "No deploy-specific environment variables"
fi

# TODO: consider removing this when all artifacts have tmp folder created at build time?
if [[ ! -d ./tmp ]]; then
  echo "Creating tmp directory in sandbox"
  mkdir ./tmp
  sudo chown -R {{{ user }}} ./tmp
fi

# Create log directory for logrotate runs
if [[ ! -d {{{ logDir }}} ]]; then
    echo "Creating log directory ({{{ logDir }}})"
    mkdir -p {{{ logDir }}}
    sudo chown -R {{{ user }}} {{{ logDir }}}
fi

echo "Ensuring {{{ taskAppDirectory }}} is owned by {{{ user }}}"
sudo chown -R {{{ user }}} {{{ taskAppDirectory }}}

cd {{{ taskAppDirectory }}}/

# load artifact's profile.d
if [[ -d .profile.d ]]; then
    for FILE in $(ls .profile.d/*); do
        source "$FILE"
        echo "Sourced $FILE"
    done
else
  echo "No deploy-specific profile.d"
fi

# execute command
echo "Executing: sudo -E -u {{{ user }}} {{{ cmd }}} >> ../{{{ logFile }}} 2>&1"
exec sudo -E -u {{{ user }}} {{{ cmd }}} >> ../{{{ logFile }}} 2>&1
