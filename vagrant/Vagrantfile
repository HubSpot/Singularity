# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  if !Vagrant.has_plugin?("vagrant-hostsupdater")
    raise "Please install vagrant-hostsupdater via `vagrant plugin install vagrant-hostsupdater`"
  end

  # additional plugin checks for base_image machine
  if ARGV[1] == 'base_image'
    if !Vagrant.has_plugin?("vagrant-omnibus")
      raise "Please install vagrant-omnibus via `vagrant plugin install vagrant-omnibus --plugin-version=1.4.1`"
    end

    if !Vagrant.has_plugin?("vagrant-berkshelf")
      raise "Please install vagrant-berkshelf via `vagrant plugin install vagrant-berkshelf`"
    end
  end

  config.vm.synced_folder "../", "/singularity", type: "nfs"

  config.vm.box = "singularity-develop-0.21.0-2"
  config.vm.box_url = "https://hubspot-vagrant-boxes.s3.amazonaws.com/singularity-develop-0.21.0-2"

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", "1024"]
  end

  private_ip = '192.168.33.11'
  mysql_password = "mesos7mysql"

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.auto_detect = true
  end

  config.vm.hostname = 'vagrant-singularity'
  config.vm.network :private_network, ip: private_ip

  config.vm.define "test", primary: true do |test|
    test.vm.provision "shell", path: "provision-singularity.sh"
  end

  config.vm.define "test-baragon", autostart: false do |test|
    test.vm.provision "shell", path: "provision-singularity.sh"

    test.vm.provision "shell", path: "provision-baragon.sh"
  end

  config.vm.define "develop", autostart: false

  config.vm.define "base_image", autostart: false do |build|
    build.vm.box = "opscode_ubuntu-14.04_provisionerless"
    build.vm.box_url = "http://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-14.04_chef-provisionerless.box"

    build.berkshelf.berksfile_path = 'Berksfile'
    build.berkshelf.enabled = true
    build.omnibus.chef_version = :latest

    build.vm.provision :shell do |shell|
      shell.inline = 'test -f $1 || (sudo apt-get update -y && touch $1)'
      shell.args = '/var/run/apt-get-update'
    end

    build.vm.provision :chef_solo do |chef|
      chef.log_level = :debug
      chef.add_recipe "singularity"

      # You may also specify custom JSON attributes:
      chef.json = {
        :mysql => {
          :server_root_password => "#{mysql_password}",
        },
        :mesos => {
          :package_version => '0.21.0-1.0.ubuntu1404',
          :master => {
            :hostname => config.vm.hostname
          },
          :slave => {
            :hostname => config.vm.hostname
          },
          :slave_resources => {
            'cpus(*)' => '10.0'  # oversubscribe CPUs to make running multiple tasks easier
          }
        }
      }
    end

    build.vm.provision :shell, path: "provision_base.sh"
  end
end
